android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commitAllowingStateLoss() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> N
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    int mFragmentId -> u
    int mContainerId -> v
    java.lang.String mTag -> w
    boolean mHidden -> x
    boolean mDetached -> y
    boolean mRetainInstance -> z
    boolean mRetaining -> A
    boolean mHasMenu -> B
    boolean mMenuVisible -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> L
    boolean mCheckedForLoaderManager -> M
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> a
    void setIndex(int) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> c
    android.content.res.Resources getResources() -> d
    java.lang.String getString(int) -> b
    boolean isAdded() -> e
    boolean isHidden() -> f
    void onHiddenChanged(boolean) -> a
    void setRetainInstance(boolean) -> b
    void setHasOptionsMenu(boolean) -> c
    void setMenuVisibility(boolean) -> d
    void setUserVisibleHint(boolean) -> e
    void startActivity(android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> g
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> h
    void onResume() -> i
    void onSaveInstanceState(android.os.Bundle) -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> j
    void onStop() -> k
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> l
    void onDestroy() -> m
    void initState() -> n
    void onDetach() -> o
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> p
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> q
    void performStop() -> r
    void performReallyStop() -> s
    void performDestroyView() -> t
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.g:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SparseArrayCompat mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SparseArrayCompat loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.k:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.l:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroy() -> q
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> r
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.q:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.s:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTransaction -> android.support.v4.app.t:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commitAllowingStateLoss() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.u:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.v:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.w:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.x:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.y:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.z:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> g
    int idealIntArraySize(int) -> h
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.y:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.z:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.aa:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    int[] ATTRS -> m
    int[] TEXT_ATTRS -> n
    int mNonPrimaryAlpha -> o
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> p
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> a
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.ab:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ac:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a_
    void onPageScrollStateChanged(int) -> b_
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ad:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ae:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.af:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ag:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ah:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ai:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ak:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.al:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.am:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.an:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ao:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ap:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.aq:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ar:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.as:
    void postInvalidateOnAnimation(android.view.View) -> b
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.au:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.av:
    long getFrameTime() -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aw:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ax:
    void postInvalidateOnAnimation(android.view.View) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ay:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.az:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ba:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mNeedCalculatePageOffsets -> R
    boolean mCalledSuper -> S
    int mDecorChildCount -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> W
    int mScrollState -> Z
    void initViewPager() -> a
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> h
    boolean isGutterDrag(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v4.view.PagerAdapter access$100(android.support.v4.view.ViewPager) -> a
    int access$200(android.support.v4.view.ViewPager) -> b
    int[] access$300() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bd:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.be:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bf:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bg:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bh:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bi:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bj:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bk:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a_
    void onPageScrollStateChanged(int) -> b_
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.example.Milestone1.Adapters.CreateMarksJournalAdapter -> com.example.Milestone1.a.a:
    android.app.Activity activity -> c
    java.util.ArrayList results -> d
    int pos -> e
    android.view.LayoutInflater lInflater -> a
    android.view.View v -> f
    android.widget.CompoundButton$OnCheckedChangeListener checkChangeListener -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.util.ArrayList getData() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.ArrayList access$000(com.example.Milestone1.Adapters.CreateMarksJournalAdapter) -> a
com.example.Milestone1.Adapters.CreateMarksJournalAdapter$1 -> com.example.Milestone1.a.b:
    com.example.Milestone1.Adapters.CreateMarksJournalAdapter this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.example.Milestone1.Adapters.CreateMarksJournalAdapter$2 -> com.example.Milestone1.a.c:
    com.example.Milestone1.Adapters.CreateMarksJournalAdapter this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.example.Milestone1.Adapters.CreateMarksJournalAdapter$3 -> com.example.Milestone1.a.d:
    com.example.Milestone1.Adapters.CreateMarksJournalAdapter this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.Milestone1.Adapters.CreateMarksJournalAdapter$ViewHolder -> com.example.Milestone1.a.e:
    android.widget.TextView tvTitle -> a
    android.widget.EditText etDescription -> b
    android.widget.EditText etMark -> c
    android.widget.CheckBox cbMark -> d
com.example.Milestone1.Adapters.EditMarksJournalAdapter -> com.example.Milestone1.a.f:
    android.app.Activity activity -> c
    java.util.ArrayList results -> d
    int pos -> e
    android.view.LayoutInflater lInflater -> a
    android.view.ViewGroup par -> f
    android.widget.CompoundButton$OnCheckedChangeListener checkChangeListener -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.util.ArrayList getData() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.ArrayList access$000(com.example.Milestone1.Adapters.EditMarksJournalAdapter) -> a
com.example.Milestone1.Adapters.EditMarksJournalAdapter$1 -> com.example.Milestone1.a.g:
    com.example.Milestone1.Adapters.EditMarksJournalAdapter this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.example.Milestone1.Adapters.EditMarksJournalAdapter$2 -> com.example.Milestone1.a.h:
    com.example.Milestone1.Adapters.EditMarksJournalAdapter this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.example.Milestone1.Adapters.EditMarksJournalAdapter$3 -> com.example.Milestone1.a.i:
    com.example.Milestone1.Adapters.EditMarksJournalAdapter$ViewHolder val$viewHolder -> a
    com.example.Milestone1.Adapters.EditMarksJournalAdapter this$0 -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.Milestone1.Adapters.EditMarksJournalAdapter$4 -> com.example.Milestone1.a.j:
    com.example.Milestone1.Adapters.EditMarksJournalAdapter this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.Milestone1.Adapters.EditMarksJournalAdapter$ViewHolder -> com.example.Milestone1.a.k:
    android.widget.TextView tvTitle -> a
    android.widget.EditText etDescription -> b
    android.widget.EditText etMark -> c
    android.widget.Spinner spType -> d
    android.widget.CheckBox cbMark -> e
com.example.Milestone1.Adapters.FeedAdapter -> com.example.Milestone1.a.l:
    java.util.ArrayList results -> a
    android.content.Context context -> b
    int pos -> c
    android.widget.ImageView image -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.content.Context getContext() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.Milestone1.Adapters.FriendsAdapter -> com.example.Milestone1.a.m:
    java.util.ArrayList results -> a
    android.content.Context context -> b
    int pos -> c
    android.widget.ImageView image -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.content.Context getContext() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.Milestone1.Adapters.GroupsAdapter -> com.example.Milestone1.a.n:
    java.util.ArrayList results -> b
    android.content.Context context -> c
    int pos -> a
    int level -> d
    java.lang.String parentID -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context getContext() -> a
    java.lang.String access$002(com.example.Milestone1.Adapters.GroupsAdapter,java.lang.String) -> a
    java.util.ArrayList access$100(com.example.Milestone1.Adapters.GroupsAdapter) -> a
    int access$202(com.example.Milestone1.Adapters.GroupsAdapter,int) -> a
    int access$208(com.example.Milestone1.Adapters.GroupsAdapter) -> b
    java.lang.String access$000(com.example.Milestone1.Adapters.GroupsAdapter) -> c
    int access$200(com.example.Milestone1.Adapters.GroupsAdapter) -> d
com.example.Milestone1.Adapters.GroupsAdapter$1 -> com.example.Milestone1.a.o:
    java.lang.Exception exception -> a
    com.example.Milestone1.Adapters.GroupsAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.example.Milestone1.Adapters.GroupsTitleAdapter -> com.example.Milestone1.a.p:
    java.lang.String[] titles -> a
    android.support.v4.app.Fragment[] frags -> b
    java.lang.CharSequence getPageTitle(int) -> c
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.example.Milestone1.Adapters.TabsAdapter -> com.example.Milestone1.a.q:
    android.content.Context mContext -> a
    android.widget.TabHost mTabHost -> b
    android.support.v4.view.ViewPager mViewPager -> c
    java.util.ArrayList mTabs -> d
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> a
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
    void onTabChanged(java.lang.String) -> onTabChanged
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a_
    void onPageScrollStateChanged(int) -> b_
com.example.Milestone1.Adapters.TabsAdapter$DummyTabFactory -> com.example.Milestone1.a.r:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
com.example.Milestone1.Adapters.TabsAdapter$TabInfo -> com.example.Milestone1.a.s:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    java.lang.Class access$000(com.example.Milestone1.Adapters.TabsAdapter$TabInfo) -> a
    android.os.Bundle access$100(com.example.Milestone1.Adapters.TabsAdapter$TabInfo) -> b
com.example.Milestone1.Adapters.TitleAdapter -> com.example.Milestone1.a.t:
    java.lang.String[] titles -> a
    android.support.v4.app.Fragment[] frags -> b
    java.lang.CharSequence getPageTitle(int) -> c
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.example.Milestone1.AuthorizationActivity -> com.example.Milestone1.AuthorizationActivity:
    com.example.Milestone1.Classes.Response result -> a
    android.widget.EditText edEmail -> b
    android.widget.EditText edPasswd -> c
    java.lang.Exception exception -> d
    com.example.Milestone1.Classes.userAuthorization user -> f
    boolean $assertionsDisabled -> e
    void onCreate(android.os.Bundle) -> onCreate
    void setData(com.example.Milestone1.Classes.Response) -> a
    void OnClickBtnLogIn(android.view.View) -> OnClickBtnLogIn
    void OnClickBtnSignUp(android.view.View) -> OnClickBtnSignUp
    com.example.Milestone1.Classes.userAuthorization access$000(com.example.Milestone1.AuthorizationActivity) -> a
com.example.Milestone1.AuthorizationActivity$Authorization -> com.example.Milestone1.a:
    android.app.ProgressDialog pdLoading -> a
    com.example.Milestone1.AuthorizationActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.userAuthorization[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.Classes.Courses -> com.example.Milestone1.b.a:
    java.util.UUID Id -> a
    java.lang.String Title -> b
    java.lang.Boolean IsCourseOwner -> c
    java.lang.Boolean getIsCourseOwner() -> a
    java.util.UUID getId() -> b
    java.lang.String getTitle() -> c
com.example.Milestone1.Classes.CreateCourse -> com.example.Milestone1.b.b:
    java.util.UUID Token -> a
    java.lang.String Title -> b
    void setToken(java.util.UUID) -> a
    void setTitle(java.lang.String) -> a
com.example.Milestone1.Classes.CreateEvent -> com.example.Milestone1.b.c:
    java.util.UUID Token -> a
    java.util.UUID GroupID -> b
    java.lang.String Description -> c
    java.lang.String EndDate -> d
    java.lang.String EndTime -> e
    java.lang.String Location -> f
    java.lang.String StartTime -> g
    java.lang.Integer TimeInterval -> h
    java.lang.String Title -> i
    void setGroupID(java.util.UUID) -> a
    void setToken(java.util.UUID) -> b
    void setDescription(java.lang.String) -> a
    void setEndDate(java.lang.String) -> b
    void setEndTime(java.lang.String) -> c
    void setLocation(java.lang.String) -> d
    void setStartTime(java.lang.String) -> e
    void setTimeInterval(java.lang.Integer) -> a
    void setTitle(java.lang.String) -> f
com.example.Milestone1.Classes.CreateJournal -> com.example.Milestone1.b.d:
    java.util.UUID Token -> a
    java.lang.String Title -> b
    java.util.UUID CourseID -> c
    java.util.UUID GroupID -> d
    void setToken(java.util.UUID) -> a
    void setTitle(java.lang.String) -> a
    void setCourseID(java.util.UUID) -> b
    void setGroupID(java.util.UUID) -> c
com.example.Milestone1.Classes.EditMark -> com.example.Milestone1.b.e:
    com.example.Milestone1.Classes.MarksRead[] Item -> a
    java.util.UUID Token -> b
    java.lang.Integer LessonNumber -> c
    java.util.UUID JournalID -> d
    void setItem(com.example.Milestone1.Classes.MarksRead[]) -> a
    void setToken(java.util.UUID) -> a
    void setLessonNumber(java.lang.Integer) -> a
    void setJournalID(java.util.UUID) -> b
com.example.Milestone1.Classes.Event -> com.example.Milestone1.b.f:
    java.util.UUID EventID -> a
    java.lang.String Description -> b
    java.lang.String StartTime -> c
    java.lang.String EndDate -> d
    java.lang.String EndTime -> e
    java.lang.String Location -> f
    java.lang.Integer TimeInterval -> g
    java.lang.String Title -> h
    java.lang.Boolean IsReadWrite -> i
    java.lang.String GroupName -> j
    java.util.UUID Token -> k
    java.lang.Boolean getIsReadWrite() -> a
    java.lang.String getGroupName() -> b
    void setToken(java.util.UUID) -> a
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    java.lang.Integer getTimeInterval() -> d
    void setTimeInterval(java.lang.Integer) -> a
    java.lang.String getStartTime() -> e
    void setStartTime(java.lang.String) -> b
    java.lang.String getLocation() -> f
    void setLocation(java.lang.String) -> c
    java.util.UUID getEventID() -> g
    void setEventID(java.util.UUID) -> b
    java.lang.String getEndTime() -> h
    void setEndTime(java.lang.String) -> d
    java.lang.String getEndDate() -> i
    void setEndDate(java.lang.String) -> e
    java.lang.String getDescription() -> j
    void setDescription(java.lang.String) -> f
com.example.Milestone1.Classes.Feed -> com.example.Milestone1.b.g:
    java.lang.Boolean IsMessageOwner -> a
    java.lang.String Body -> b
    java.lang.String Time -> c
    java.lang.String Title -> d
    java.util.UUID Id -> e
    java.lang.String FirstName -> f
    java.lang.String LastName -> g
    java.util.UUID PictureID -> h
    java.lang.Boolean getIsMessageOwner() -> a
    java.util.UUID getPictureID() -> b
    java.lang.String getLastName() -> c
    java.lang.String getFirstName() -> d
    java.util.UUID getId() -> e
    java.lang.String getTitle() -> f
    java.lang.String getTime() -> g
    java.lang.String getBody() -> h
com.example.Milestone1.Classes.Friend -> com.example.Milestone1.b.h:
    java.util.UUID FriendID -> a
    java.util.UUID Token -> b
com.example.Milestone1.Classes.GroupFeedRead -> com.example.Milestone1.b.i:
    java.util.UUID Id -> a
    java.lang.Boolean IsMessageOwner -> b
    java.lang.String Message -> c
    java.lang.String Time -> d
    java.lang.String FirstName -> e
    java.lang.String LastName -> f
    java.util.UUID PictureID -> g
    java.util.UUID getId() -> a
    java.lang.Boolean getIsMessageOwner() -> b
    java.util.UUID getPictureID() -> c
    java.lang.String getLastName() -> d
    java.lang.String getFirstName() -> e
    java.lang.String getTime() -> f
    java.lang.String getMessage() -> g
com.example.Milestone1.Classes.GroupFollow -> com.example.Milestone1.b.j:
    java.util.UUID Token -> a
    java.util.UUID GroupID -> b
    void setGroupID(java.util.UUID) -> a
    void setToken(java.util.UUID) -> b
com.example.Milestone1.Classes.GroupWrite -> com.example.Milestone1.b.k:
    java.util.UUID Token -> a
    java.lang.Integer GroupLevel -> b
    java.lang.String Name -> c
    java.util.UUID Parent -> d
    java.lang.String Description -> e
    java.lang.String WebSite -> f
    java.util.UUID PictureID -> g
    java.lang.Boolean Free -> h
    java.util.UUID Id -> i
com.example.Milestone1.Classes.Groups -> com.example.Milestone1.b.l:
    java.util.UUID Id -> a
    java.lang.Integer GroupLevel -> b
    java.lang.String Name -> c
    java.util.UUID Parent -> d
    java.lang.String Description -> e
    java.lang.String WebSite -> f
    java.util.UUID PictureID -> g
    java.lang.Boolean IsMember -> h
    java.lang.Boolean Free -> i
    java.lang.Boolean IsOwner -> j
    java.lang.Boolean getIsOwner() -> a
    java.lang.Boolean getFree() -> b
    java.util.UUID getId() -> c
    java.lang.Integer getGroupLevel() -> d
    java.lang.String getName() -> e
    java.util.UUID getParent() -> f
    java.lang.String getDescription() -> g
    java.lang.String getWebSite() -> h
    java.util.UUID getPictureID() -> i
    java.lang.Boolean getMember() -> j
com.example.Milestone1.Classes.JournalDates -> com.example.Milestone1.b.m:
    java.lang.String Date -> a
    java.lang.Integer LessonNumber -> b
    java.lang.String getDate() -> a
    java.lang.Integer getLessonNumber() -> b
com.example.Milestone1.Classes.Journals -> com.example.Milestone1.b.n:
    java.util.UUID Id -> a
    java.lang.String GroupName -> b
    java.lang.String CourseName -> c
    java.lang.String OwnerName -> d
    java.lang.String Title -> e
    java.util.UUID GroupID -> f
    java.util.UUID getId() -> a
    java.lang.String getGroupName() -> b
    java.lang.String getCourseName() -> c
    java.lang.String getOwnerName() -> d
    java.lang.String getTitle() -> e
    java.util.UUID getGroupID() -> f
com.example.Milestone1.Classes.Marks -> com.example.Milestone1.b.o:
    java.lang.String UserName -> a
    java.util.UUID Id -> b
    java.lang.Integer Mark -> c
    java.lang.Integer Type -> d
    java.lang.String Description -> e
    java.util.UUID UserID -> f
    java.lang.String Date -> g
    java.lang.Integer LessonNumber -> h
    java.lang.String getUserName() -> a
    java.lang.Integer getLessonNumber() -> b
    java.util.UUID getId() -> c
    java.lang.Integer getMark() -> d
    java.lang.Integer getType() -> e
    java.lang.String getDescription() -> f
    java.util.UUID getUserID() -> g
    java.lang.String getDate() -> h
com.example.Milestone1.Classes.MarksRead -> com.example.Milestone1.b.p:
    java.util.UUID Id -> a
    java.lang.Integer Mark -> b
    java.lang.Integer Type -> c
    java.lang.String Description -> d
    java.util.UUID UserID -> e
    void setId(java.util.UUID) -> a
    void setMark(java.lang.Integer) -> a
    void setType(java.lang.Integer) -> b
    void setDescription(java.lang.String) -> a
    void setUserID(java.util.UUID) -> b
com.example.Milestone1.Classes.Members -> com.example.Milestone1.b.q:
    java.util.UUID Id -> a
    java.lang.String FirstName -> b
    java.lang.String LastName -> c
    java.util.UUID PictureID -> d
    java.util.UUID getId() -> a
    java.lang.String getFirstName() -> b
    java.lang.String getLastName() -> c
    java.util.UUID getPictureID() -> d
com.example.Milestone1.Classes.Response -> com.example.Milestone1.b.r:
    java.lang.Object Item -> a
    java.lang.Integer StatusCode -> b
    java.lang.Object getItem() -> a
    java.lang.Integer getStatusCode() -> b
com.example.Milestone1.Classes.SendGroupMessage -> com.example.Milestone1.b.s:
    java.util.UUID Token -> a
    java.lang.String Message -> b
    java.util.UUID GroupID -> c
com.example.Milestone1.Classes.SendMessage -> com.example.Milestone1.b.t:
    java.util.UUID Token -> a
    java.lang.String Message -> b
com.example.Milestone1.Classes.User -> com.example.Milestone1.b.u:
    java.lang.String FirstName -> a
    java.lang.String LastName -> b
    java.lang.String MiddleName -> c
    java.lang.String BirthDate -> d
    java.lang.String EMail -> e
    java.lang.String Phone -> f
    java.lang.String Country -> g
    java.lang.String City -> h
    java.lang.Boolean IsFollowing -> i
    java.util.UUID PictureID -> j
    java.util.UUID getPictureID() -> a
    java.lang.String getFirstName() -> b
    java.lang.String getLastName() -> c
    java.lang.String getMiddleName() -> d
    java.lang.String getBirthDate() -> e
    java.lang.String getEMail() -> f
    java.lang.String getPhone() -> g
    java.lang.String getCity() -> h
    java.lang.String getCountry() -> i
    java.lang.Boolean getFollowing() -> j
com.example.Milestone1.Classes.UserWrite -> com.example.Milestone1.b.v:
    java.util.UUID Token -> a
    java.lang.String FirstName -> b
    java.lang.String LastName -> c
    java.lang.String MiddleName -> d
    java.lang.String BirthDate -> e
    java.lang.String EMail -> f
    java.lang.String Phone -> g
    java.lang.String Country -> h
    java.lang.String City -> i
    void setCity(java.lang.String) -> a
    void setToken(java.util.UUID) -> a
    void setFirstName(java.lang.String) -> b
    void setLastName(java.lang.String) -> c
    void setMiddleName(java.lang.String) -> d
    void setBirthDate(java.lang.String) -> e
    void setEMail(java.lang.String) -> f
    void setPhone(java.lang.String) -> g
    void setCountry(java.lang.String) -> h
com.example.Milestone1.Classes.userAuthorization -> com.example.Milestone1.b.w:
    java.lang.String Password -> a
    java.lang.String EMail -> b
com.example.Milestone1.Classes.userRegistration -> com.example.Milestone1.b.x:
    java.lang.String FirstName -> a
    java.lang.String LastName -> b
    java.lang.String Password -> c
    java.lang.String EMail -> d
com.example.Milestone1.CreateCourseActivity -> com.example.Milestone1.CreateCourseActivity:
    java.util.UUID token -> a
    android.widget.EditText etCourseName -> b
    com.example.Milestone1.Classes.Response result -> c
    com.example.Milestone1.Classes.CreateCourse createCourse -> d
    java.lang.Exception exception -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.example.Milestone1.Classes.CreateCourse access$000(com.example.Milestone1.CreateCourseActivity) -> a
    com.example.Milestone1.Classes.Response access$102(com.example.Milestone1.CreateCourseActivity,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$100(com.example.Milestone1.CreateCourseActivity) -> b
com.example.Milestone1.CreateCourseActivity$PostCreateCourse -> com.example.Milestone1.b:
    java.lang.Exception ex -> b
    com.example.Milestone1.CreateCourseActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateEventActivity -> com.example.Milestone1.CreateEventActivity:
    android.widget.TextView tvTime -> e
    android.widget.TextView tvDate -> f
    int hours -> g
    int endHours -> h
    int minutes -> i
    int endMinutes -> j
    int years -> k
    int endYears -> l
    int months -> m
    int endMonths -> n
    int days -> o
    int endDays -> p
    android.widget.TextView tvEndTime -> q
    android.widget.TextView tvEndDate -> r
    android.widget.EditText etLocation -> s
    android.widget.EditText etDescription -> t
    android.widget.EditText etTitle -> u
    android.widget.CheckBox cbAllDay -> v
    android.widget.Spinner spInterval -> w
    com.example.Milestone1.Classes.Response result -> x
    com.example.Milestone1.Classes.CreateEvent createEvent -> y
    java.util.UUID token -> z
    java.lang.Exception exception -> A
    java.util.UUID groupID -> B
    android.widget.Spinner spGroup -> C
    com.example.Milestone1.Classes.Groups[] groups -> D
    java.lang.String[] group_names -> E
    android.app.TimePickerDialog$OnTimeSetListener mStartTimeSetListener -> a
    android.app.TimePickerDialog$OnTimeSetListener mEndTimeSetListener -> b
    android.app.DatePickerDialog$OnDateSetListener mDateSetListener -> c
    android.app.DatePickerDialog$OnDateSetListener mEndDateSetListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClickStartTimePick(android.view.View) -> onClickStartTimePick
    void onClickStartDatePick(android.view.View) -> onClickStartDatePick
    void onClickEndTimePick(android.view.View) -> onClickEndTimePick
    void onClickEndDatePick(android.view.View) -> onClickEndDatePick
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void updateDisplay() -> b
    java.lang.String pad(int) -> a
    void SetSpinnerGroups(com.example.Milestone1.Classes.Response) -> a
    void getData() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    int access$002(com.example.Milestone1.CreateEventActivity,int) -> a
    int access$102(com.example.Milestone1.CreateEventActivity,int) -> b
    void access$200(com.example.Milestone1.CreateEventActivity) -> a
    int access$302(com.example.Milestone1.CreateEventActivity,int) -> c
    int access$402(com.example.Milestone1.CreateEventActivity,int) -> d
    int access$502(com.example.Milestone1.CreateEventActivity,int) -> e
    int access$602(com.example.Milestone1.CreateEventActivity,int) -> f
    int access$702(com.example.Milestone1.CreateEventActivity,int) -> g
    int access$802(com.example.Milestone1.CreateEventActivity,int) -> h
    int access$902(com.example.Milestone1.CreateEventActivity,int) -> i
    int access$1002(com.example.Milestone1.CreateEventActivity,int) -> j
    com.example.Milestone1.Classes.Response access$1100(com.example.Milestone1.CreateEventActivity) -> b
    void access$1200(com.example.Milestone1.CreateEventActivity) -> c
    com.example.Milestone1.Classes.CreateEvent access$1300(com.example.Milestone1.CreateEventActivity) -> d
    com.example.Milestone1.Classes.Response access$1102(com.example.Milestone1.CreateEventActivity,com.example.Milestone1.Classes.Response) -> a
    java.util.UUID access$1400(com.example.Milestone1.CreateEventActivity) -> e
com.example.Milestone1.CreateEventActivity$1 -> com.example.Milestone1.c:
    com.example.Milestone1.CreateEventActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.example.Milestone1.CreateEventActivity$2 -> com.example.Milestone1.d:
    com.example.Milestone1.CreateEventActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.example.Milestone1.CreateEventActivity$3 -> com.example.Milestone1.e:
    com.example.Milestone1.CreateEventActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.example.Milestone1.CreateEventActivity$4 -> com.example.Milestone1.f:
    com.example.Milestone1.CreateEventActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.example.Milestone1.CreateEventActivity$CreateUserEvent -> com.example.Milestone1.g:
    java.lang.Exception ex -> c
    android.app.ProgressDialog pdLoading -> a
    java.lang.Exception exception -> d
    com.example.Milestone1.CreateEventActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateEventActivity$GetUserGroups -> com.example.Milestone1.h:
    java.lang.Exception ex -> a
    com.example.Milestone1.CreateEventActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateEventActivity$GetUserGroups$1 -> com.example.Milestone1.i:
    com.example.Milestone1.CreateEventActivity$GetUserGroups this$1 -> a
com.example.Milestone1.CreateGroupActivity -> com.example.Milestone1.CreateGroupActivity:
    java.util.UUID parentID -> a
    java.util.UUID token -> b
    int level -> c
    com.example.Milestone1.Classes.GroupWrite create -> d
    android.widget.EditText groupName -> e
    android.widget.EditText groupDescription -> f
    android.widget.EditText groupWebSite -> g
    com.example.Milestone1.CreateGroupActivity$CreateGroup createGroup -> h
    java.lang.Exception exception -> i
    com.example.Milestone1.Classes.Response result -> j
    android.widget.Spinner spFree -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onClickBtnCreateGroup(android.view.View) -> onClickBtnCreateGroup
    com.example.Milestone1.Classes.Response access$002(com.example.Milestone1.CreateGroupActivity,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$000(com.example.Milestone1.CreateGroupActivity) -> a
com.example.Milestone1.CreateGroupActivity$CreateGroup -> com.example.Milestone1.j:
    java.lang.Exception ex -> b
    com.example.Milestone1.CreateGroupActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.GroupWrite[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateJournalActivity -> com.example.Milestone1.CreateJournalActivity:
    com.example.Milestone1.Classes.Groups[] groups -> a
    java.util.UUID token -> b
    android.widget.EditText etJournalName -> c
    android.widget.Spinner spJournalGroup -> d
    com.example.Milestone1.Classes.Response result -> e
    android.widget.Spinner spJournalCourse -> f
    com.example.Milestone1.Classes.Courses[] courses -> g
    java.lang.String[] group_names -> h
    java.lang.String[] course_names -> i
    java.lang.Exception exception -> j
    com.example.Milestone1.Classes.CreateJournal createJournal -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.util.UUID access$000(com.example.Milestone1.CreateJournalActivity) -> a
    com.example.Milestone1.Classes.Response access$102(com.example.Milestone1.CreateJournalActivity,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$100(com.example.Milestone1.CreateJournalActivity) -> b
    com.example.Milestone1.Classes.CreateJournal access$200(com.example.Milestone1.CreateJournalActivity) -> c
com.example.Milestone1.CreateJournalActivity$GetUserCourses -> com.example.Milestone1.k:
    java.lang.Exception ex -> a
    com.example.Milestone1.CreateJournalActivity this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateJournalActivity$GetUserCourses$1 -> com.example.Milestone1.l:
    com.example.Milestone1.CreateJournalActivity$GetUserCourses this$1 -> a
com.example.Milestone1.CreateJournalActivity$GetUserGroups -> com.example.Milestone1.m:
    java.lang.Exception ex -> a
    com.example.Milestone1.CreateJournalActivity this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateJournalActivity$GetUserGroups$1 -> com.example.Milestone1.n:
    com.example.Milestone1.CreateJournalActivity$GetUserGroups this$1 -> a
com.example.Milestone1.CreateJournalActivity$PostCreateJournal -> com.example.Milestone1.o:
    java.lang.Exception ex -> b
    com.example.Milestone1.CreateJournalActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateMarksJournalActivity -> com.example.Milestone1.CreateMarksJournalActivity:
    com.example.Milestone1.Classes.Response result -> a
    java.util.UUID token -> b
    java.util.UUID groupID -> c
    java.util.UUID journalID -> d
    java.util.ArrayList data -> e
    java.lang.Exception exception -> f
    com.example.Milestone1.Classes.MarksRead[] marksReads -> g
    com.example.Milestone1.Classes.Members[] members -> h
    com.example.Milestone1.Classes.EditMark createMarks -> i
    int item_pos -> j
    android.widget.ListView listMarks -> k
    com.example.Milestone1.Adapters.CreateMarksJournalAdapter createMarksJournalAdapter -> l
    int spType_pos -> m
    java.util.HashMap m -> n
    android.widget.Spinner spType -> o
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setData(com.example.Milestone1.Classes.Response) -> a
    int access$002(com.example.Milestone1.CreateMarksJournalActivity,int) -> a
    int access$102(com.example.Milestone1.CreateMarksJournalActivity,int) -> b
    com.example.Milestone1.Classes.Response access$200(com.example.Milestone1.CreateMarksJournalActivity) -> a
    void access$300(com.example.Milestone1.CreateMarksJournalActivity,com.example.Milestone1.Classes.Response) -> a
    java.util.UUID access$400(com.example.Milestone1.CreateMarksJournalActivity) -> b
    java.util.UUID access$500(com.example.Milestone1.CreateMarksJournalActivity) -> c
    com.example.Milestone1.Classes.Response access$202(com.example.Milestone1.CreateMarksJournalActivity,com.example.Milestone1.Classes.Response) -> b
    java.util.UUID access$600(com.example.Milestone1.CreateMarksJournalActivity) -> d
    void access$700(com.example.Milestone1.CreateMarksJournalActivity) -> e
    com.example.Milestone1.Classes.EditMark access$800(com.example.Milestone1.CreateMarksJournalActivity) -> f
com.example.Milestone1.CreateMarksJournalActivity$1 -> com.example.Milestone1.p:
    com.example.Milestone1.CreateMarksJournalActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.Milestone1.CreateMarksJournalActivity$2 -> com.example.Milestone1.q:
    com.example.Milestone1.CreateMarksJournalActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.Milestone1.CreateMarksJournalActivity$CreateMarks -> com.example.Milestone1.r:
    java.lang.Exception ex -> c
    android.app.ProgressDialog pdLoading -> a
    com.example.Milestone1.CreateMarksJournalActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateMarksJournalActivity$GetJournalMembers -> com.example.Milestone1.s:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.CreateMarksJournalActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.CreateMarksJournalActivity$GetJournalMembers$1 -> com.example.Milestone1.t:
    com.example.Milestone1.CreateMarksJournalActivity$GetJournalMembers this$1 -> a
com.example.Milestone1.EditEventActivity -> com.example.Milestone1.EditEventActivity:
    com.example.Milestone1.Classes.Event eventEdit -> e
    android.widget.Spinner spInterval -> f
    android.widget.CheckBox cbAllDay -> g
    android.widget.EditText etTitle -> h
    android.widget.EditText etDescription -> i
    android.widget.TextView tvEndTime -> j
    android.widget.TextView tvEndDate -> k
    android.widget.EditText etLocation -> l
    android.widget.TextView tvTime -> m
    android.widget.TextView tvDate -> n
    java.util.UUID token -> o
    java.lang.String title -> p
    java.lang.String startTime -> q
    java.lang.String endDate -> r
    java.lang.String endTime -> s
    int interval -> t
    java.lang.String location -> u
    java.lang.String description -> v
    java.util.Date eventStartTime -> w
    java.util.Date eventEndTime -> x
    int hours -> y
    int endHours -> z
    int minutes -> A
    int endMinutes -> B
    int years -> C
    int endYears -> D
    int months -> E
    int endMonths -> F
    int days -> G
    int endDays -> H
    com.example.Milestone1.Classes.Response success -> I
    java.util.UUID eventID -> J
    android.app.TimePickerDialog$OnTimeSetListener mStartTimeSetListener -> a
    android.app.TimePickerDialog$OnTimeSetListener mEndTimeSetListener -> b
    android.app.DatePickerDialog$OnDateSetListener mDateSetListener -> c
    android.app.DatePickerDialog$OnDateSetListener mEndDateSetListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClickStartTimePick(android.view.View) -> onClickStartTimePick
    void onClickStartDatePick(android.view.View) -> onClickStartDatePick
    void onClickEndTimePick(android.view.View) -> onClickEndTimePick
    void onClickEndDatePick(android.view.View) -> onClickEndDatePick
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void updateDisplay() -> a
    java.lang.String pad(int) -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    int access$002(com.example.Milestone1.EditEventActivity,int) -> a
    int access$102(com.example.Milestone1.EditEventActivity,int) -> b
    int access$100(com.example.Milestone1.EditEventActivity) -> a
    java.lang.String access$200(int) -> a
    int access$000(com.example.Milestone1.EditEventActivity) -> b
    android.widget.TextView access$300(com.example.Milestone1.EditEventActivity) -> c
    void access$400(com.example.Milestone1.EditEventActivity) -> d
    int access$502(com.example.Milestone1.EditEventActivity,int) -> c
    int access$602(com.example.Milestone1.EditEventActivity,int) -> d
    int access$600(com.example.Milestone1.EditEventActivity) -> e
    int access$500(com.example.Milestone1.EditEventActivity) -> f
    android.widget.TextView access$700(com.example.Milestone1.EditEventActivity) -> g
    int access$802(com.example.Milestone1.EditEventActivity,int) -> e
    int access$902(com.example.Milestone1.EditEventActivity,int) -> f
    int access$1002(com.example.Milestone1.EditEventActivity,int) -> g
    int access$1000(com.example.Milestone1.EditEventActivity) -> h
    int access$900(com.example.Milestone1.EditEventActivity) -> i
    int access$800(com.example.Milestone1.EditEventActivity) -> j
    android.widget.TextView access$1100(com.example.Milestone1.EditEventActivity) -> k
    int access$1202(com.example.Milestone1.EditEventActivity,int) -> h
    int access$1302(com.example.Milestone1.EditEventActivity,int) -> i
    int access$1402(com.example.Milestone1.EditEventActivity,int) -> j
    int access$1400(com.example.Milestone1.EditEventActivity) -> l
    int access$1300(com.example.Milestone1.EditEventActivity) -> m
    int access$1200(com.example.Milestone1.EditEventActivity) -> n
    android.widget.TextView access$1500(com.example.Milestone1.EditEventActivity) -> o
    com.example.Milestone1.Classes.Event access$1600(com.example.Milestone1.EditEventActivity) -> p
    com.example.Milestone1.Classes.Response access$1702(com.example.Milestone1.EditEventActivity,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$1700(com.example.Milestone1.EditEventActivity) -> q
com.example.Milestone1.EditEventActivity$1 -> com.example.Milestone1.u:
    com.example.Milestone1.EditEventActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.example.Milestone1.EditEventActivity$2 -> com.example.Milestone1.v:
    com.example.Milestone1.EditEventActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.example.Milestone1.EditEventActivity$3 -> com.example.Milestone1.w:
    com.example.Milestone1.EditEventActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.example.Milestone1.EditEventActivity$4 -> com.example.Milestone1.x:
    com.example.Milestone1.EditEventActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.example.Milestone1.EditEventActivity$EventEdit -> com.example.Milestone1.y:
    java.lang.Exception ex -> b
    com.example.Milestone1.EditEventActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.EditGroupActivity -> com.example.Milestone1.EditGroupActivity:
    android.widget.Spinner spFree -> a
    android.widget.EditText groupName -> b
    android.widget.EditText groupDescription -> c
    android.widget.EditText groupWebSite -> d
    java.util.UUID token -> e
    java.lang.Exception exception -> f
    com.example.Milestone1.Classes.Response result -> g
    java.util.UUID groupID -> h
    com.example.Milestone1.Classes.Groups groupInformation -> i
    com.example.Milestone1.Classes.GroupWrite editGroup -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onClickBtnEditGroup(android.view.View) -> onClickBtnEditGroup
    com.example.Milestone1.Classes.GroupWrite access$000(com.example.Milestone1.EditGroupActivity) -> a
    com.example.Milestone1.Classes.Response access$102(com.example.Milestone1.EditGroupActivity,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$100(com.example.Milestone1.EditGroupActivity) -> b
    java.util.UUID access$200(com.example.Milestone1.EditGroupActivity) -> c
    java.util.UUID access$300(com.example.Milestone1.EditGroupActivity) -> d
com.example.Milestone1.EditGroupActivity$EditGroup -> com.example.Milestone1.z:
    java.lang.Exception ex -> b
    com.example.Milestone1.EditGroupActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.GroupWrite[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.EditGroupActivity$GetGroupInformation -> com.example.Milestone1.aa:
    java.lang.Exception ex -> a
    com.example.Milestone1.EditGroupActivity this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.EditGroupActivity$GetGroupInformation$1 -> com.example.Milestone1.ab:
    com.example.Milestone1.EditGroupActivity$GetGroupInformation this$1 -> a
com.example.Milestone1.EditMarksJournalActivity -> com.example.Milestone1.EditMarksJournalActivity:
    java.util.UUID token -> a
    java.util.UUID journalID -> b
    java.lang.String date -> c
    android.widget.ListView listMarks -> d
    java.lang.Exception exception -> e
    com.example.Milestone1.Classes.Marks[] marks -> f
    java.util.ArrayList data -> g
    com.example.Milestone1.Classes.Response result -> h
    com.example.Milestone1.Adapters.EditMarksJournalAdapter simpleAdapter -> i
    com.example.Milestone1.Classes.MarksRead[] marksReads -> j
    com.example.Milestone1.Classes.EditMark editMark -> k
    java.util.UUID groupID -> l
    int lessonNumber -> m
    void onCreate(android.os.Bundle) -> onCreate
    void setData(com.example.Milestone1.Classes.Response) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.example.Milestone1.Classes.Response access$000(com.example.Milestone1.EditMarksJournalActivity) -> a
    com.example.Milestone1.Adapters.EditMarksJournalAdapter access$100(com.example.Milestone1.EditMarksJournalActivity) -> b
    java.util.UUID access$200(com.example.Milestone1.EditMarksJournalActivity) -> c
    java.util.UUID access$300(com.example.Milestone1.EditMarksJournalActivity) -> d
    java.lang.String access$400(com.example.Milestone1.EditMarksJournalActivity) -> e
    com.example.Milestone1.Classes.Response access$002(com.example.Milestone1.EditMarksJournalActivity,com.example.Milestone1.Classes.Response) -> a
    java.util.UUID access$500(com.example.Milestone1.EditMarksJournalActivity) -> f
    void access$600(com.example.Milestone1.EditMarksJournalActivity) -> g
    com.example.Milestone1.Classes.EditMark access$700(com.example.Milestone1.EditMarksJournalActivity) -> h
com.example.Milestone1.EditMarksJournalActivity$EditMarks -> com.example.Milestone1.ac:
    java.lang.Exception ex -> c
    android.app.ProgressDialog pdLoading -> a
    com.example.Milestone1.EditMarksJournalActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.EditMarksJournalActivity$GetMarks -> com.example.Milestone1.ad:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.EditMarksJournalActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.EditMarksJournalActivity$GetMarks$1 -> com.example.Milestone1.ae:
    com.example.Milestone1.EditMarksJournalActivity$GetMarks this$1 -> a
com.example.Milestone1.EventActivity -> com.example.Milestone1.EventActivity:
    android.widget.TextView tvTitle -> a
    android.widget.TextView tvStartTime -> b
    android.widget.TextView tvEndTime -> c
    android.widget.TextView tvInterval -> d
    android.widget.TextView tvDescription -> e
    android.widget.TextView tvLocation -> f
    android.widget.TextView tvGroup -> g
    java.lang.String startTime -> i
    java.lang.String endTime -> j
    java.util.Date dateTime -> k
    java.lang.String startDateTime -> l
    java.lang.String endDateTime -> m
    java.util.Date timeDate -> n
    java.util.UUID eventID -> o
    java.lang.Exception exception -> p
    java.util.UUID token -> q
    com.example.Milestone1.Classes.Response result -> r
    com.example.Milestone1.EventActivity$GetEventInformation getEventInformation -> h
    com.example.Milestone1.Classes.Event event -> s
    void onCreate(android.os.Bundle) -> onCreate
    void setData(com.example.Milestone1.Classes.Response) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.util.UUID access$000(com.example.Milestone1.EventActivity) -> a
    java.util.UUID access$100(com.example.Milestone1.EventActivity) -> b
    com.example.Milestone1.Classes.Response access$202(com.example.Milestone1.EventActivity,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$200(com.example.Milestone1.EventActivity) -> c
com.example.Milestone1.EventActivity$DeleteEvent -> com.example.Milestone1.af:
    java.lang.Exception ex -> b
    com.example.Milestone1.EventActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.EventActivity$GetEventInformation -> com.example.Milestone1.ag:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.EventActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.EventActivity$GetEventInformation$1 -> com.example.Milestone1.ah:
    com.example.Milestone1.EventActivity$GetEventInformation this$1 -> a
com.example.Milestone1.GroupEventsFragment -> com.example.Milestone1.ai:
    java.util.UUID token -> N
    com.example.Milestone1.Classes.Response result -> O
    android.widget.SimpleAdapter sAdapter -> P
    com.example.Milestone1.Classes.Event[] events -> Q
    java.util.Date[] datetime -> R
    java.util.Date[] timedate -> S
    android.widget.ListView listEvents -> T
    java.util.UUID groupID -> U
    java.util.ArrayList data -> V
    java.util.Comparator comparator -> W
    java.lang.String eventID -> X
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setData(com.example.Milestone1.Classes.Response) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    java.lang.String access$002(com.example.Milestone1.GroupEventsFragment,java.lang.String) -> a
    java.util.ArrayList access$100(com.example.Milestone1.GroupEventsFragment) -> a
    java.lang.String access$000(com.example.Milestone1.GroupEventsFragment) -> b
    java.util.UUID access$200(com.example.Milestone1.GroupEventsFragment) -> c
    java.util.UUID access$300(com.example.Milestone1.GroupEventsFragment) -> d
    com.example.Milestone1.Classes.Response access$402(com.example.Milestone1.GroupEventsFragment,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$400(com.example.Milestone1.GroupEventsFragment) -> e
com.example.Milestone1.GroupEventsFragment$1 -> com.example.Milestone1.aj:
    java.lang.Exception exception -> a
    com.example.Milestone1.GroupEventsFragment this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.GroupEventsFragment$2 -> com.example.Milestone1.ak:
    com.example.Milestone1.GroupEventsFragment this$0 -> a
    int compare(java.util.HashMap,java.util.HashMap) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.example.Milestone1.GroupEventsFragment$GetGroupEvents -> com.example.Milestone1.al:
    java.lang.Exception ex -> b
    com.example.Milestone1.GroupEventsFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupEventsFragment$GetGroupEvents$1 -> com.example.Milestone1.am:
    com.example.Milestone1.GroupEventsFragment$GetGroupEvents this$1 -> a
com.example.Milestone1.GroupFeedFragment -> com.example.Milestone1.an:
    java.lang.String ATTRIBUTE_NAME_TEXTF -> N
    java.lang.String ATTRIBUTE_NAME_IMAGE -> O
    java.lang.String ATTRIBUTE_NAME_MESSAGE -> P
    java.lang.String ATTRIBUTE_NAME_TIME -> Q
    int img -> R
    com.example.Milestone1.GroupFeedFragment$GetGroupFeed getGroupFeed -> S
    com.example.Milestone1.Classes.GroupFeedRead[] feed -> T
    com.example.Milestone1.Classes.Response result -> U
    com.example.Milestone1.Classes.GroupFeedRead[] newFeed -> V
    java.lang.String timeOffset -> W
    android.widget.ListView listFeed -> X
    java.util.UUID token -> Y
    java.util.UUID groupID -> Z
    java.lang.Integer offset -> aa
    java.lang.Integer count -> ab
    android.widget.EditText editSendMessage -> ac
    com.example.Milestone1.Classes.SendGroupMessage send -> ad
    com.example.Milestone1.Classes.Response success -> ae
    com.example.Milestone1.Classes.Response sent -> af
    com.example.Milestone1.GroupFeedFragment$SendMessageToGroupFeed sendmessage -> ag
    java.lang.Exception exception -> ah
    android.widget.SimpleAdapter sAdapter -> ai
    com.example.Milestone1.GroupFeedFragment$GetNewGroupFeed getNewFeed -> aj
    java.util.Map m -> ak
    java.util.ArrayList data -> al
    java.util.Date[] datetime -> am
    com.example.Milestone1.GroupFeedFragment$GetNewGroupFeed updateFeed -> an
    java.util.UUID messageID -> ao
    boolean groupOwner -> ap
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setData(com.example.Milestone1.Classes.Response) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onClick(android.view.View) -> onClick
    java.util.UUID access$000(com.example.Milestone1.GroupFeedFragment) -> a
com.example.Milestone1.GroupFeedFragment$1 -> com.example.Milestone1.ao:
    com.example.Milestone1.GroupFeedFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.GroupFeedFragment$GetGroupFeed -> com.example.Milestone1.ap:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.GroupFeedFragment this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupFeedFragment$GetGroupFeed$1 -> com.example.Milestone1.aq:
    com.example.Milestone1.GroupFeedFragment$GetGroupFeed this$1 -> a
com.example.Milestone1.GroupFeedFragment$GetNewGroupFeed -> com.example.Milestone1.ar:
    java.lang.Exception ex -> a
    com.example.Milestone1.GroupFeedFragment this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupFeedFragment$GetNewGroupFeed$1 -> com.example.Milestone1.as:
    com.example.Milestone1.GroupFeedFragment$GetNewGroupFeed this$1 -> a
com.example.Milestone1.GroupFeedFragment$RemoveMessage -> com.example.Milestone1.at:
    com.example.Milestone1.GroupFeedFragment this$0 -> a
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupFeedFragment$SendMessageToGroupFeed -> com.example.Milestone1.au:
    java.lang.Exception ex -> b
    com.example.Milestone1.GroupFeedFragment this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.SendGroupMessage[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupFragmentActivity -> com.example.Milestone1.GroupFragmentActivity:
    int current_fragment -> m
    void onCreate(android.os.Bundle) -> onCreate
com.example.Milestone1.GroupInformationFragment -> com.example.Milestone1.av:
    java.util.UUID token -> N
    java.util.UUID groupID -> O
    com.example.Milestone1.Classes.Response result -> P
    com.example.Milestone1.Classes.Groups groupInfo -> Q
    com.example.Milestone1.GroupInformationFragment$GetGroupInformation getGroupInformation -> R
    android.widget.TextView groupName -> S
    android.widget.TextView groupDescription -> T
    android.widget.TextView groupWebSite -> U
    java.lang.Exception exception -> V
    com.example.Milestone1.Classes.GroupFollow groupFollow -> W
    com.example.Milestone1.GroupInformationFragment$PostGroupFollow postGroupFollow -> X
    android.widget.TextView textViewWebSite -> Y
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setData(com.example.Milestone1.Classes.Response) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    com.example.Milestone1.Classes.GroupFollow access$000(com.example.Milestone1.GroupInformationFragment) -> a
com.example.Milestone1.GroupInformationFragment$GetGroupInformation -> com.example.Milestone1.aw:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.GroupInformationFragment this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupInformationFragment$GetGroupInformation$1 -> com.example.Milestone1.ax:
    com.example.Milestone1.GroupInformationFragment$GetGroupInformation this$1 -> a
com.example.Milestone1.GroupInformationFragment$PostGroupFollow -> com.example.Milestone1.ay:
    android.app.ProgressDialog pdLoading -> a
    com.example.Milestone1.GroupInformationFragment this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupInformationFragment$RemoveGroup -> com.example.Milestone1.az:
    com.example.Milestone1.GroupInformationFragment this$0 -> a
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupMembersFragment -> com.example.Milestone1.ba:
    com.example.Milestone1.GroupMembersFragment$GetGroupMembers getGroupMembers -> N
    com.example.Milestone1.Classes.Members[] members -> O
    java.lang.Exception exception -> P
    android.widget.ListView listMembers -> Q
    java.util.UUID token -> R
    java.util.UUID groupID -> S
    java.util.UUID memberID -> T
    java.lang.Integer offset -> U
    java.lang.Integer count -> V
    com.example.Milestone1.Classes.Response result -> W
    com.example.Milestone1.Adapters.FriendsAdapter sAdapter -> X
    java.util.ArrayList data -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    com.example.Milestone1.Classes.Response access$002(com.example.Milestone1.GroupMembersFragment,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$000(com.example.Milestone1.GroupMembersFragment) -> a
com.example.Milestone1.GroupMembersFragment$1 -> com.example.Milestone1.bb:
    java.lang.Exception ex -> a
    com.example.Milestone1.GroupMembersFragment this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.GroupMembersFragment$GetGroupMembers -> com.example.Milestone1.bc:
    java.lang.Exception ex -> a
    com.example.Milestone1.GroupMembersFragment this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupMembersFragment$GetGroupMembers$1 -> com.example.Milestone1.bd:
    com.example.Milestone1.GroupMembersFragment$GetGroupMembers this$1 -> a
com.example.Milestone1.GroupsActivity -> com.example.Milestone1.GroupsActivity:
    java.lang.String ATTRIBUTE_NAME_TEXTN -> a
    java.lang.String ATTRIBUTE_NAME_TEXTD -> b
    java.lang.String ATTRIBUTE_NAME_GROUPID -> c
    java.util.UUID token -> d
    java.util.UUID parentID -> e
    int level -> f
    java.lang.Exception exception -> g
    android.widget.ListView listGroups -> h
    com.example.Milestone1.Classes.Response result -> i
    com.example.Milestone1.Classes.Groups[] groups -> j
    com.example.Milestone1.GroupsActivity$GetGroups getGroups -> k
    java.util.UUID groupID -> m
    android.content.SharedPreferences sharedPreferences -> l
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    java.util.UUID access$002(com.example.Milestone1.GroupsActivity,java.util.UUID) -> a
    java.util.UUID access$000(com.example.Milestone1.GroupsActivity) -> a
com.example.Milestone1.GroupsActivity$1 -> com.example.Milestone1.be:
    java.lang.Exception ex -> a
    com.example.Milestone1.GroupsActivity this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.GroupsActivity$GetGroups -> com.example.Milestone1.bf:
    java.lang.Exception ex -> a
    com.example.Milestone1.GroupsActivity this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.GroupsActivity$GetGroups$1 -> com.example.Milestone1.bg:
    com.example.Milestone1.GroupsActivity$GetGroups this$1 -> a
com.example.Milestone1.JournalActivity -> com.example.Milestone1.JournalActivity:
    java.util.UUID token -> a
    java.util.UUID journalID -> b
    com.example.Milestone1.Classes.Response result -> c
    java.lang.Exception exception -> d
    java.util.ArrayList data -> e
    android.widget.ListView listJournalDates -> f
    com.example.Milestone1.Classes.JournalDates[] dates -> g
    android.widget.Spinner spJournalTypes -> h
    java.util.UUID groupID -> i
    com.example.Milestone1.JournalActivity$GetJournalMembers getJournalMembers -> j
    android.widget.SimpleAdapter simpleAdapter -> k
    com.example.Milestone1.Classes.Members[] members -> l
    void onCreate(android.os.Bundle) -> onCreate
    void setData(com.example.Milestone1.Classes.Response) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.example.Milestone1.JournalActivity$GetJournalMembers access$002(com.example.Milestone1.JournalActivity,com.example.Milestone1.JournalActivity$GetJournalMembers) -> a
    com.example.Milestone1.JournalActivity$GetJournalMembers access$000(com.example.Milestone1.JournalActivity) -> a
    android.widget.Spinner access$100(com.example.Milestone1.JournalActivity) -> b
    com.example.Milestone1.Classes.JournalDates[] access$200(com.example.Milestone1.JournalActivity) -> c
    java.util.UUID access$300(com.example.Milestone1.JournalActivity) -> d
    java.util.UUID access$400(com.example.Milestone1.JournalActivity) -> e
    com.example.Milestone1.Classes.Members[] access$500(com.example.Milestone1.JournalActivity) -> f
    com.example.Milestone1.Classes.Response access$600(com.example.Milestone1.JournalActivity) -> g
    java.util.UUID access$700(com.example.Milestone1.JournalActivity) -> h
    com.example.Milestone1.Classes.Response access$602(com.example.Milestone1.JournalActivity,com.example.Milestone1.Classes.Response) -> a
com.example.Milestone1.JournalActivity$1 -> com.example.Milestone1.bh:
    com.example.Milestone1.JournalActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.Milestone1.JournalActivity$2 -> com.example.Milestone1.bi:
    com.example.Milestone1.JournalActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.JournalActivity$GetDatesMyJournals -> com.example.Milestone1.bj:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.JournalActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.JournalActivity$GetDatesMyJournals$1 -> com.example.Milestone1.bk:
    com.example.Milestone1.JournalActivity$GetDatesMyJournals this$1 -> a
com.example.Milestone1.JournalActivity$GetJournalMembers -> com.example.Milestone1.bl:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.JournalActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.JournalActivity$GetJournalMembers$1 -> com.example.Milestone1.bm:
    com.example.Milestone1.JournalActivity$GetJournalMembers this$1 -> a
com.example.Milestone1.LicenseActivity -> com.example.Milestone1.LicenseActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.example.Milestone1.MainActivity -> com.example.Milestone1.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.example.Milestone1.MarksActivity -> com.example.Milestone1.MarksActivity:
    java.util.UUID journalID -> a
    java.util.UUID token -> b
    java.lang.String date -> c
    com.example.Milestone1.Classes.Response result -> d
    java.util.ArrayList data -> e
    java.lang.Exception exception -> f
    android.widget.ListView listMarks -> g
    com.example.Milestone1.Classes.Marks[] marks -> h
    java.util.UUID groupID -> i
    java.lang.String[] types -> j
    int lessonNumber -> k
    void onCreate(android.os.Bundle) -> onCreate
    void setData(com.example.Milestone1.Classes.Response) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.example.Milestone1.Classes.Response access$000(com.example.Milestone1.MarksActivity) -> a
    java.util.UUID access$100(com.example.Milestone1.MarksActivity) -> b
    java.lang.String access$200(com.example.Milestone1.MarksActivity) -> c
    com.example.Milestone1.Classes.Response access$002(com.example.Milestone1.MarksActivity,com.example.Milestone1.Classes.Response) -> a
com.example.Milestone1.MarksActivity$GetMarks -> com.example.Milestone1.bn:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.MarksActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.MarksActivity$GetMarks$1 -> com.example.Milestone1.bo:
    com.example.Milestone1.MarksActivity$GetMarks this$1 -> a
com.example.Milestone1.MyMarksActivity -> com.example.Milestone1.MyMarksActivity:
    java.util.UUID journalID -> a
    java.util.UUID token -> b
    com.example.Milestone1.Classes.Response result -> c
    java.lang.String[] types -> d
    java.lang.Exception exception -> e
    java.util.UUID userID -> f
    void onCreate(android.os.Bundle) -> onCreate
    void setData(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$000(com.example.Milestone1.MyMarksActivity) -> a
    java.util.UUID access$100(com.example.Milestone1.MyMarksActivity) -> b
    java.util.UUID access$200(com.example.Milestone1.MyMarksActivity) -> c
    com.example.Milestone1.Classes.Response access$002(com.example.Milestone1.MyMarksActivity,com.example.Milestone1.Classes.Response) -> a
    java.util.UUID access$300(com.example.Milestone1.MyMarksActivity) -> d
com.example.Milestone1.MyMarksActivity$GetMyMarks -> com.example.Milestone1.bp:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.MyMarksActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.MyMarksActivity$GetMyMarks$1 -> com.example.Milestone1.bq:
    com.example.Milestone1.MyMarksActivity$GetMyMarks this$1 -> a
com.example.Milestone1.MyMarksActivity$GetUserMarks -> com.example.Milestone1.br:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.MyMarksActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.MyMarksActivity$GetUserMarks$1 -> com.example.Milestone1.bs:
    com.example.Milestone1.MyMarksActivity$GetUserMarks this$1 -> a
com.example.Milestone1.OtherMainActivity -> com.example.Milestone1.OtherMainActivity:
    android.support.v4.view.ViewPager mViewPager -> m
    android.widget.TabHost mTabHost -> n
    com.example.Milestone1.Adapters.TabsAdapter mTabsAdapter -> o
    java.lang.String[] titles -> p
    java.util.UUID token -> q
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.example.Milestone1.RegistrationActivity -> com.example.Milestone1.RegistrationActivity:
    android.widget.EditText editEmail -> a
    android.widget.EditText editPasswd -> b
    android.widget.EditText editName -> c
    android.widget.EditText editLastName -> d
    com.example.Milestone1.Classes.userRegistration userRegistration -> e
    com.example.Milestone1.RegistrationActivity$Registration registration -> f
    com.example.Milestone1.Classes.Response response -> g
    android.content.Intent intent -> h
    com.example.Milestone1.Classes.Response result -> i
    void onCreate(android.os.Bundle) -> onCreate
    void OnClickBtnReg(android.view.View) -> OnClickBtnReg
    void onClickLicenseString(android.view.View) -> onClickLicenseString
com.example.Milestone1.RegistrationActivity$Registration -> com.example.Milestone1.bt:
    java.lang.Exception exeption -> a
    com.example.Milestone1.RegistrationActivity this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.userRegistration[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.ServerConnect.DownloadImagesTask -> com.example.Milestone1.c.a:
    android.widget.ImageView imageView -> a
    android.graphics.Bitmap doInBackground(android.widget.ImageView[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    android.graphics.Bitmap download_Image(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserActivity -> com.example.Milestone1.UserActivity:
    java.util.UUID token -> a
    java.util.UUID userID -> b
    com.example.Milestone1.Classes.Response result -> c
    com.example.Milestone1.UserActivity$PostFriend followTask -> d
    com.example.Milestone1.UserActivity$GetUserInformation getUser -> e
    com.example.Milestone1.Classes.Friend friend -> f
    java.lang.Exception exception -> g
    java.util.Date userDate -> h
    java.lang.String BirthDate -> i
    android.widget.TextView tvName -> j
    android.widget.TextView tvCity -> k
    android.widget.ListView listView -> l
    android.content.Intent intent -> m
    android.widget.ImageView image -> n
    com.example.Milestone1.Classes.User user -> o
    void onCreate(android.os.Bundle) -> onCreate
    void setData(com.example.Milestone1.Classes.Response) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
com.example.Milestone1.UserActivity$GetUserInformation -> com.example.Milestone1.bu:
    java.lang.Exception exception -> c
    android.app.ProgressDialog pdLoading -> a
    com.example.Milestone1.UserActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserActivity$GetUserInformation$1 -> com.example.Milestone1.bv:
    com.example.Milestone1.UserActivity$GetUserInformation this$1 -> a
com.example.Milestone1.UserActivity$PostFriend -> com.example.Milestone1.bw:
    java.lang.Exception exception -> c
    android.app.ProgressDialog pdLoading -> a
    com.example.Milestone1.UserActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.Friend[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserCoursesFragment -> com.example.Milestone1.bx:
    java.util.UUID token -> N
    com.example.Milestone1.Classes.Response result -> O
    android.widget.ListView listCourses -> P
    com.example.Milestone1.Classes.Courses[] courses -> Q
    com.example.Milestone1.UserCoursesFragment$GetUserCourses getUserCourses -> R
    java.util.UUID courseID -> S
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setData(com.example.Milestone1.Classes.Response) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    java.util.UUID access$000(com.example.Milestone1.UserCoursesFragment) -> a
    com.example.Milestone1.Classes.Response access$102(com.example.Milestone1.UserCoursesFragment,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$100(com.example.Milestone1.UserCoursesFragment) -> b
    com.example.Milestone1.UserCoursesFragment$GetUserCourses access$202(com.example.Milestone1.UserCoursesFragment,com.example.Milestone1.UserCoursesFragment$GetUserCourses) -> a
    com.example.Milestone1.UserCoursesFragment$GetUserCourses access$200(com.example.Milestone1.UserCoursesFragment) -> c
    java.util.UUID access$300(com.example.Milestone1.UserCoursesFragment) -> d
com.example.Milestone1.UserCoursesFragment$GetUserCourses -> com.example.Milestone1.by:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.UserCoursesFragment this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserCoursesFragment$GetUserCourses$1 -> com.example.Milestone1.bz:
    com.example.Milestone1.UserCoursesFragment$GetUserCourses this$1 -> a
com.example.Milestone1.UserCoursesFragment$RemoveCourse -> com.example.Milestone1.ca:
    com.example.Milestone1.UserCoursesFragment this$0 -> a
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserEditActivity -> com.example.Milestone1.UserEditActivity:
    java.util.UUID token -> b
    java.util.UUID userID -> c
    com.example.Milestone1.Classes.Response result -> d
    int language -> e
    android.widget.EditText etFirstName -> f
    android.widget.EditText etLastName -> g
    android.widget.EditText etMiddleName -> h
    android.widget.TextView etBirthDate -> i
    android.widget.EditText etEmail -> j
    android.widget.EditText etPhone -> k
    android.widget.EditText etCity -> l
    android.widget.Spinner spCountry -> m
    com.example.Milestone1.Classes.UserWrite userWrite -> n
    int year -> o
    int month -> p
    int day -> q
    android.app.DatePickerDialog$OnDateSetListener birthDateSetListener -> a
    void onCreate(android.os.Bundle) -> onCreate
    void updateDisplay() -> a
    void onClickEditBirthDate(android.view.View) -> onClickEditBirthDate
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    int access$002(com.example.Milestone1.UserEditActivity,int) -> a
    int access$102(com.example.Milestone1.UserEditActivity,int) -> b
    int access$202(com.example.Milestone1.UserEditActivity,int) -> c
    int access$200(com.example.Milestone1.UserEditActivity) -> a
    int access$100(com.example.Milestone1.UserEditActivity) -> b
    int access$000(com.example.Milestone1.UserEditActivity) -> c
    android.widget.TextView access$300(com.example.Milestone1.UserEditActivity) -> d
    java.util.UUID access$400(com.example.Milestone1.UserEditActivity) -> e
    java.util.UUID access$500(com.example.Milestone1.UserEditActivity) -> f
    com.example.Milestone1.Classes.Response access$602(com.example.Milestone1.UserEditActivity,com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response access$600(com.example.Milestone1.UserEditActivity) -> g
    int access$700(com.example.Milestone1.UserEditActivity) -> h
    com.example.Milestone1.Classes.UserWrite access$800(com.example.Milestone1.UserEditActivity) -> i
com.example.Milestone1.UserEditActivity$1 -> com.example.Milestone1.cb:
    com.example.Milestone1.UserEditActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.example.Milestone1.UserEditActivity$GetCountry -> com.example.Milestone1.cc:
    java.lang.Exception exception -> b
    com.example.Milestone1.UserEditActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserEditActivity$GetUserInformation -> com.example.Milestone1.cd:
    java.lang.Exception exception -> b
    com.example.Milestone1.UserEditActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserEditActivity$GetUserInformation$1 -> com.example.Milestone1.ce:
    com.example.Milestone1.UserEditActivity$GetUserInformation this$1 -> a
com.example.Milestone1.UserEditActivity$PostUserWrite -> com.example.Milestone1.cf:
    java.lang.Exception exception -> b
    com.example.Milestone1.UserEditActivity this$0 -> a
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.UserWrite[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserEventsFragment -> com.example.Milestone1.cg:
    java.util.UUID token -> N
    com.example.Milestone1.Classes.Response result -> R
    com.example.Milestone1.UserEventsFragment$GetUserEvents getUserEvents -> S
    java.lang.String ATTRIBUTE_NAME_TITLE -> T
    java.lang.String ATTRIBUTE_NAME_STARTTIME -> U
    java.lang.String ATTRIBUTE_NAME_ENDTIME -> V
    java.lang.String ATTRIBUTE_NAME_LOCATION -> W
    android.widget.ListView listEvents -> X
    java.util.Date[] datetime -> Y
    android.widget.SimpleAdapter sAdapter -> O
    java.util.Date[] timedate -> Z
    java.util.ArrayList data -> P
    java.lang.String eventID -> aa
    com.example.Milestone1.Classes.Event[] events -> ab
    java.util.HashMap m -> Q
    com.example.Milestone1.UserEventsFragment$GetUserEvents updateUserEvents -> ac
    java.util.Comparator comparator -> ad
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setData(com.example.Milestone1.Classes.Response) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    java.lang.String access$002(com.example.Milestone1.UserEventsFragment,java.lang.String) -> a
    java.lang.String access$000(com.example.Milestone1.UserEventsFragment) -> a
    java.lang.String access$100(com.example.Milestone1.UserEventsFragment) -> b
    com.example.Milestone1.Classes.Response access$200(com.example.Milestone1.UserEventsFragment) -> c
    com.example.Milestone1.Classes.Response access$202(com.example.Milestone1.UserEventsFragment,com.example.Milestone1.Classes.Response) -> a
com.example.Milestone1.UserEventsFragment$1 -> com.example.Milestone1.ch:
    java.lang.Exception exception -> a
    com.example.Milestone1.UserEventsFragment this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.UserEventsFragment$2 -> com.example.Milestone1.ci:
    com.example.Milestone1.UserEventsFragment this$0 -> a
    int compare(java.util.HashMap,java.util.HashMap) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.example.Milestone1.UserEventsFragment$GetUserEvents -> com.example.Milestone1.cj:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.UserEventsFragment this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Void) -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserEventsFragment$GetUserEvents$1 -> com.example.Milestone1.ck:
    com.example.Milestone1.UserEventsFragment$GetUserEvents this$1 -> a
com.example.Milestone1.UserFeedFragment -> com.example.Milestone1.cl:
    com.example.Milestone1.UserFeedFragment$GetFeed getFeed -> N
    com.example.Milestone1.Classes.Feed[] feed -> O
    com.example.Milestone1.Classes.Response result -> P
    android.widget.ListView listFeed -> Q
    java.util.UUID token -> R
    java.lang.Integer offset -> S
    java.lang.Integer count -> T
    android.widget.EditText editSendMessage -> U
    com.example.Milestone1.Classes.SendMessage send -> V
    java.lang.Boolean sent -> W
    com.example.Milestone1.UserFeedFragment$SendMessageToFeed sendmessage -> X
    java.lang.Exception exception -> Y
    java.util.Date[] datetime -> ac
    com.example.Milestone1.Adapters.FeedAdapter sAdapter -> ad
    java.util.Map m -> Z
    java.lang.String timeOffset -> aa
    java.util.ArrayList data -> ab
    com.example.Milestone1.Classes.Feed[] newFeed -> ae
    java.util.UUID messageID -> af
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setData() -> u
    void onClick(android.view.View) -> onClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    com.example.Milestone1.Adapters.FeedAdapter access$002(com.example.Milestone1.UserFeedFragment,com.example.Milestone1.Adapters.FeedAdapter) -> a
    com.example.Milestone1.Adapters.FeedAdapter access$000(com.example.Milestone1.UserFeedFragment) -> a
    java.util.Date[] access$102(com.example.Milestone1.UserFeedFragment,java.util.Date[]) -> a
    java.util.Date[] access$100(com.example.Milestone1.UserFeedFragment) -> b
    java.util.UUID access$200(com.example.Milestone1.UserFeedFragment) -> c
com.example.Milestone1.UserFeedFragment$1 -> com.example.Milestone1.cm:
    com.example.Milestone1.UserFeedFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.UserFeedFragment$GetFeed -> com.example.Milestone1.cn:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.UserFeedFragment this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Void) -> a
    java.lang.Void doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserFeedFragment$GetFeed$1 -> com.example.Milestone1.co:
    com.example.Milestone1.UserFeedFragment$GetFeed this$1 -> a
com.example.Milestone1.UserFeedFragment$GetNewFeed -> com.example.Milestone1.cp:
    java.lang.Exception ex -> a
    com.example.Milestone1.UserFeedFragment this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserFeedFragment$GetNewFeed$1 -> com.example.Milestone1.cq:
    com.example.Milestone1.UserFeedFragment$GetNewFeed this$1 -> a
com.example.Milestone1.UserFeedFragment$RemoveMessage -> com.example.Milestone1.cr:
    com.example.Milestone1.UserFeedFragment this$0 -> a
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserFeedFragment$SendMessageToFeed -> com.example.Milestone1.cs:
    java.lang.Exception ex -> a
    com.example.Milestone1.UserFeedFragment this$0 -> b
    com.example.Milestone1.Classes.Response doInBackground(com.example.Milestone1.Classes.SendGroupMessage[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserFriendsFragment -> com.example.Milestone1.ct:
    com.example.Milestone1.Classes.Members[] friends -> N
    java.lang.Exception exception -> O
    android.widget.ListView listFriends -> P
    java.util.UUID token -> Q
    java.util.UUID friendID -> R
    java.lang.String friend_string -> S
    com.example.Milestone1.Classes.Response result -> T
    java.util.ArrayList data -> U
    java.util.HashMap m -> V
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void SetData(com.example.Milestone1.Classes.Response) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    com.example.Milestone1.Classes.Response access$000(com.example.Milestone1.UserFriendsFragment) -> a
    com.example.Milestone1.Classes.Response access$002(com.example.Milestone1.UserFriendsFragment,com.example.Milestone1.Classes.Response) -> a
com.example.Milestone1.UserFriendsFragment$1 -> com.example.Milestone1.cu:
    java.lang.Exception ex -> a
    com.example.Milestone1.UserFriendsFragment this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.UserFriendsFragment$GetFriends -> com.example.Milestone1.cv:
    java.lang.Exception ex -> a
    com.example.Milestone1.UserFriendsFragment this$0 -> b
    void onPostExecute(java.lang.Void) -> a
    java.lang.Void doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserFriendsFragment$GetFriends$1 -> com.example.Milestone1.cw:
    com.example.Milestone1.UserFriendsFragment$GetFriends this$1 -> a
com.example.Milestone1.UserGroupsFragment -> com.example.Milestone1.cx:
    java.lang.String ATTRIBUTE_NAME_TEXTN -> N
    java.lang.String ATTRIBUTE_NAME_TEXTD -> O
    java.lang.String ATTRIBUTE_NAME_IMAGE -> P
    java.lang.Exception exception -> Q
    android.widget.ListView listGroups -> R
    java.util.UUID token -> S
    com.example.Milestone1.Classes.Response result -> T
    com.example.Milestone1.Classes.Groups[] groups -> U
    com.example.Milestone1.UserGroupsFragment$GetUserGroups getUserGroups -> V
    java.util.UUID groupID -> W
    android.content.SharedPreferences sharedPreferences -> Y
    android.widget.SimpleAdapter sAdapter -> Z
    com.example.Milestone1.UserGroupsFragment$GetUserGroups updateUserGroups -> aa
    java.util.ArrayList data -> ab
    java.util.Map m -> X
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void SetData(com.example.Milestone1.Classes.Response) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
com.example.Milestone1.UserGroupsFragment$1 -> com.example.Milestone1.cy:
    com.example.Milestone1.UserGroupsFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.UserGroupsFragment$GetUserGroups -> com.example.Milestone1.cz:
    java.lang.Exception ex -> a
    android.app.ProgressDialog pdLoading -> b
    com.example.Milestone1.UserGroupsFragment this$0 -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.util.UUID[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserGroupsFragment$GetUserGroups$1 -> com.example.Milestone1.da:
    com.example.Milestone1.UserGroupsFragment$GetUserGroups this$1 -> a
com.example.Milestone1.UserJournalsFragment -> com.example.Milestone1.db:
    java.lang.Exception exception -> N
    com.example.Milestone1.Classes.Response result -> O
    java.util.UUID token -> P
    com.example.Milestone1.Classes.Journals[] journals -> Q
    java.util.ArrayList data -> R
    java.util.HashMap m -> S
    android.widget.SimpleAdapter sAdapter -> T
    android.widget.ListView listJournals -> U
    android.view.View myView -> V
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void SetJournals(com.example.Milestone1.Classes.Response) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    com.example.Milestone1.Classes.Journals[] access$000(com.example.Milestone1.UserJournalsFragment) -> a
    com.example.Milestone1.Classes.Response access$100(com.example.Milestone1.UserJournalsFragment) -> b
    java.util.UUID access$200(com.example.Milestone1.UserJournalsFragment) -> c
    com.example.Milestone1.Classes.Response access$102(com.example.Milestone1.UserJournalsFragment,com.example.Milestone1.Classes.Response) -> a
com.example.Milestone1.UserJournalsFragment$1 -> com.example.Milestone1.dc:
    java.lang.Exception ex -> a
    com.example.Milestone1.UserJournalsFragment this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.UserJournalsFragment$GetJournalsOwner -> com.example.Milestone1.dd:
    java.lang.Exception exception -> b
    com.example.Milestone1.UserJournalsFragment this$0 -> a
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserJournalsFragment$GetJournalsOwner$1 -> com.example.Milestone1.de:
    com.example.Milestone1.UserJournalsFragment$GetJournalsOwner this$1 -> a
com.example.Milestone1.UserMarksFragment -> com.example.Milestone1.df:
    android.view.View myView -> N
    java.util.UUID token -> O
    com.example.Milestone1.Classes.Journals[] journals -> P
    java.util.ArrayList data -> Q
    android.widget.SimpleAdapter sAdapter -> R
    android.widget.ListView listJournals -> S
    com.example.Milestone1.Classes.Response result -> T
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void SetJournals(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Journals[] access$000(com.example.Milestone1.UserMarksFragment) -> a
    com.example.Milestone1.Classes.Response access$100(com.example.Milestone1.UserMarksFragment) -> b
    java.util.UUID access$200(com.example.Milestone1.UserMarksFragment) -> c
    com.example.Milestone1.Classes.Response access$102(com.example.Milestone1.UserMarksFragment,com.example.Milestone1.Classes.Response) -> a
com.example.Milestone1.UserMarksFragment$1 -> com.example.Milestone1.dg:
    java.lang.Exception ex -> a
    com.example.Milestone1.UserMarksFragment this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.Milestone1.UserMarksFragment$GetJournalsUser -> com.example.Milestone1.dh:
    java.lang.Exception exception -> b
    com.example.Milestone1.UserMarksFragment this$0 -> a
    void onPostExecute(com.example.Milestone1.Classes.Response) -> a
    com.example.Milestone1.Classes.Response doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.Milestone1.UserMarksFragment$GetJournalsUser$1 -> com.example.Milestone1.di:
    com.example.Milestone1.UserMarksFragment$GetJournalsUser this$1 -> a
com.google.gson.ExclusionStrategy -> com.a.a.a:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.a.a.b:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.a.a.c:
    com.google.gson.FieldNamingPolicy IDENTITY -> a
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> b
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> c
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> d
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> e
    com.google.gson.FieldNamingPolicy[] $VALUES -> f
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> com.a.a.d:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> com.a.a.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> com.a.a.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> com.a.a.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> com.a.a.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> com.a.a.i:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> com.a.a.j:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.String toJson(java.lang.Object) -> a
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> a
    java.lang.String toJson(com.google.gson.JsonElement) -> a
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> a
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> a
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
com.google.gson.Gson$1 -> com.a.a.k:
    com.google.gson.Gson this$0 -> a
    java.util.Map initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.google.gson.Gson$2 -> com.a.a.l:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.a.a.m:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$4 -> com.a.a.n:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> com.a.a.o:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$6 -> com.a.a.p:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$FutureTypeAdapter -> com.a.a.q:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.InstanceCreator -> com.a.a.r:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.a.a.s:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.a.a.t:
com.google.gson.JsonElement -> com.a.a.u:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.a.a.v:
com.google.gson.JsonNull -> com.a.a.w:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.a.a.x:
    com.google.gson.internal.StringMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.a.a.y:
com.google.gson.JsonPrimitive -> com.a.a.z:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.a.a.aa:
com.google.gson.JsonSyntaxException -> com.a.a.ab:
com.google.gson.LongSerializationPolicy -> com.a.a.ac:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy[] $VALUES -> c
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
com.google.gson.LongSerializationPolicy$1 -> com.a.a.ad:
com.google.gson.LongSerializationPolicy$2 -> com.a.a.ae:
com.google.gson.TypeAdapter -> com.a.a.af:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> com.a.a.ag:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> com.a.a.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> com.a.a.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> com.a.a.a.c:
    double value() -> a
com.google.gson.annotations.Until -> com.a.a.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.a.a.b.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.a.a.b.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.a.a.b.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.a.a.b.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.a.a.b.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.a.a.b.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.Class) -> b
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.a.a.b.g:
    com.google.gson.InstanceCreator val$creator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.a.a.b.h:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.a.a.b.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.a.a.b.j:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.a.a.b.k:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.a.a.b.l:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.a.a.b.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.a.a.b.n:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.a.a.b.o:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.a.a.b.p:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.JsonReaderInternalAccess -> com.a.a.b.q:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> com.a.a.b.r:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.ObjectConstructor -> com.a.a.b.s:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.a.a.b.t:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
com.google.gson.internal.Streams -> com.a.a.b.u:
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.io.Writer writerForAppendable(java.lang.Appendable) -> a
com.google.gson.internal.Streams$1 -> com.a.a.b.v:
com.google.gson.internal.Streams$AppendableWriter -> com.a.a.b.w:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.a.a.b.x:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.StringMap -> com.a.a.b.y:
    com.google.gson.internal.StringMap$LinkedEntry header -> a
    java.util.Map$Entry[] EMPTY_TABLE -> b
    com.google.gson.internal.StringMap$LinkedEntry[] table -> c
    int size -> d
    int threshold -> e
    java.util.Set keySet -> f
    java.util.Set entrySet -> g
    java.util.Collection values -> h
    int seed -> i
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    com.google.gson.internal.StringMap$LinkedEntry getEntry(java.lang.String) -> a
    java.lang.Object put(java.lang.String,java.lang.Object) -> a
    void addNewEntry(java.lang.String,java.lang.Object,int,int) -> a
    com.google.gson.internal.StringMap$LinkedEntry[] makeTable(int) -> a
    com.google.gson.internal.StringMap$LinkedEntry[] doubleCapacity() -> a
    java.lang.Object remove(java.lang.Object) -> remove
    void unlink(com.google.gson.internal.StringMap$LinkedEntry) -> a
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean removeMapping(java.lang.Object,java.lang.Object) -> a
    int hash(java.lang.String) -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap) -> a
    int access$500(com.google.gson.internal.StringMap) -> b
    boolean access$600(com.google.gson.internal.StringMap,java.lang.Object,java.lang.Object) -> a
com.google.gson.internal.StringMap$1 -> com.a.a.b.z:
com.google.gson.internal.StringMap$EntrySet -> com.a.a.b.aa:
    com.google.gson.internal.StringMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    void clear() -> clear
com.google.gson.internal.StringMap$EntrySet$1 -> com.a.a.b.ab:
    com.google.gson.internal.StringMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.StringMap$KeySet -> com.a.a.b.ac:
    com.google.gson.internal.StringMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.StringMap$KeySet$1 -> com.a.a.b.ad:
    com.google.gson.internal.StringMap$KeySet this$1 -> a
    java.lang.String next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.StringMap$LinkedEntry -> com.a.a.b.ae:
    java.lang.String key -> a
    java.lang.Object value -> b
    int hash -> c
    com.google.gson.internal.StringMap$LinkedEntry next -> d
    com.google.gson.internal.StringMap$LinkedEntry nxt -> e
    com.google.gson.internal.StringMap$LinkedEntry prv -> f
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object getKey() -> getKey
com.google.gson.internal.StringMap$LinkedHashIterator -> com.a.a.b.af:
    com.google.gson.internal.StringMap$LinkedEntry next -> b
    com.google.gson.internal.StringMap$LinkedEntry lastReturned -> c
    com.google.gson.internal.StringMap this$0 -> d
    boolean hasNext() -> hasNext
    com.google.gson.internal.StringMap$LinkedEntry nextEntry() -> b
    void remove() -> remove
com.google.gson.internal.StringMap$Values -> com.a.a.b.ag:
    com.google.gson.internal.StringMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.gson.internal.StringMap$Values$1 -> com.a.a.b.ah:
    com.google.gson.internal.StringMap$Values this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.UnsafeAllocator -> com.a.a.b.ai:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.a.a.b.aj:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.a.a.b.ak:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.a.a.b.al:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.a.a.b.am:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.a.a.b.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.a.a.b.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.a.a.b.a.c:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.a.a.b.a.d:
    com.google.gson.TypeAdapter elementTypeAdapter -> b
    com.google.gson.internal.ObjectConstructor constructor -> c
    com.google.gson.internal.bind.CollectionTypeAdapterFactory this$0 -> a
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> com.a.a.b.a.e:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.text.DateFormat iso8601Format -> d
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.a.a.b.a.f:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.a.a.b.a.g:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.a.a.b.a.h:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.a.a.b.a.i:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> j
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.a.a.b.a.j:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.a.a.b.a.k:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.a.a.b.a.l:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> com.a.a.b.a.m:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.a.a.b.a.n:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.a.a.b.a.o:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.a.a.b.a.p:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.a.a.b.a.q:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.a.a.b.a.r:
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Map boundFields -> c
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.a.a.b.a.s:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.a.a.b.a.t:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.a.a.b.a.u:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> com.a.a.b.a.v:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.a.a.b.a.w:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.a.a.b.a.x:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.a.a.b.a.y:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapter BIG_DECIMAL -> v
    com.google.gson.TypeAdapter BIG_INTEGER -> w
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUILDER -> y
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> z
    com.google.gson.TypeAdapter STRING_BUFFER -> A
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> B
    com.google.gson.TypeAdapter URL -> C
    com.google.gson.TypeAdapterFactory URL_FACTORY -> D
    com.google.gson.TypeAdapter URI -> E
    com.google.gson.TypeAdapterFactory URI_FACTORY -> F
    com.google.gson.TypeAdapter INET_ADDRESS -> G
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> H
    com.google.gson.TypeAdapter UUID -> I
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> J
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> K
    com.google.gson.TypeAdapter CALENDAR -> L
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> M
    com.google.gson.TypeAdapter LOCALE -> N
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> O
    com.google.gson.TypeAdapter JSON_ELEMENT -> P
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> Q
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> R
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> com.a.a.b.a.z:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> com.a.a.b.a.aa:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> com.a.a.b.a.ab:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> com.a.a.b.a.ac:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> com.a.a.b.a.ad:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> com.a.a.b.a.ae:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> com.a.a.b.a.af:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> com.a.a.b.a.ag:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> com.a.a.b.a.ah:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> com.a.a.b.a.ai:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> com.a.a.b.a.aj:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> com.a.a.b.a.ak:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> com.a.a.b.a.al:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> com.a.a.b.a.am:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> com.a.a.b.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.a.a.b.a.ao:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> com.a.a.b.a.ap:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> com.a.a.b.a.aq:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$25 -> com.a.a.b.a.ar:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> com.a.a.b.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$28 -> com.a.a.b.a.at:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.a.a.b.a.au:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.a.a.b.a.av:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> com.a.a.b.a.aw:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.a.a.b.a.ax:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.a.a.b.a.ay:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.a.a.b.a.az:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> com.a.a.b.a.ba:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> com.a.a.b.a.bb:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> com.a.a.b.a.bc:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> com.a.a.b.a.bd:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> com.a.a.b.a.be:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.a.a.b.a.bf:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.reflect.TypeToken -> com.a.a.c.a:
    java.lang.Class rawType -> b
    java.lang.reflect.Type type -> c
    int hashCode -> d
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.a.a.d.a:
    char[] NON_EXECUTE_PREFIX -> a
    com.google.gson.stream.StringPool stringPool -> b
    java.io.Reader in -> c
    boolean lenient -> d
    char[] buffer -> e
    int pos -> f
    int limit -> g
    int bufferStartLine -> h
    int bufferStartColumn -> i
    com.google.gson.stream.JsonScope[] stack -> j
    int stackSize -> k
    com.google.gson.stream.JsonToken token -> l
    java.lang.String name -> m
    java.lang.String value -> n
    int valuePos -> o
    int valueLength -> p
    boolean skipping -> q
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    void expect(com.google.gson.stream.JsonToken) -> a
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    void consumeNonExecutePrefix() -> o
    com.google.gson.stream.JsonToken advance() -> q
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonToken nextInArray(boolean) -> b
    com.google.gson.stream.JsonToken nextInObject(boolean) -> c
    com.google.gson.stream.JsonToken objectValue() -> r
    com.google.gson.stream.JsonToken nextValue() -> s
    boolean fillBuffer(int) -> a
    int getLineNumber() -> t
    int getColumnNumber() -> u
    int nextNonWhitespace(boolean) -> d
    void checkLenient() -> v
    void skipToEndOfLine() -> w
    boolean skipTo(java.lang.String) -> a
    java.lang.String nextString(char) -> a
    java.lang.String nextLiteral(boolean) -> e
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> x
    com.google.gson.stream.JsonToken readLiteral() -> y
    com.google.gson.stream.JsonToken decodeLiteral() -> z
    com.google.gson.stream.JsonToken decodeNumber(char[],int,int) -> a
    java.io.IOException syntaxError(java.lang.String) -> b
    com.google.gson.stream.JsonToken access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$200(com.google.gson.stream.JsonReader) -> c
    java.lang.String access$302(com.google.gson.stream.JsonReader,java.lang.String) -> a
    java.lang.String access$400(com.google.gson.stream.JsonReader) -> d
    java.lang.String access$402(com.google.gson.stream.JsonReader,java.lang.String) -> b
    com.google.gson.stream.JsonToken access$002(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> a
com.google.gson.stream.JsonReader$1 -> com.a.a.d.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonReader$2 -> com.a.a.d.c:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.JsonScope -> com.a.a.d.d:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> a
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> b
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> c
    com.google.gson.stream.JsonScope DANGLING_NAME -> d
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> e
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> f
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> g
    com.google.gson.stream.JsonScope CLOSED -> h
    com.google.gson.stream.JsonScope[] $VALUES -> i
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.a.a.d.e:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.a.a.d.f:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    java.util.List stack -> d
    java.lang.String indent -> e
    java.lang.String separator -> f
    boolean lenient -> g
    boolean htmlSafe -> h
    java.lang.String deferredName -> i
    boolean serializeNulls -> j
    void setIndent(java.lang.String) -> c
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    void setHtmlSafe(boolean) -> c
    boolean isHtmlSafe() -> h
    void setSerializeNulls(boolean) -> d
    boolean getSerializeNulls() -> i
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonScope peek() -> a
    void replaceTop(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> j
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> d
    void newline() -> k
    void beforeName() -> l
    void beforeValue(boolean) -> e
com.google.gson.stream.JsonWriter$1 -> com.a.a.d.g:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.MalformedJsonException -> com.a.a.d.h:
com.google.gson.stream.StringPool -> com.a.a.d.i:
    java.lang.String[] pool -> a
    java.lang.String get(char[],int,int) -> a
